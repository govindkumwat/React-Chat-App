{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/ChatFeed.js","components/LoginForm.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","attactments","marginLeft","MessageFrom","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","MessageForm","Modal","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","LoginForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f2bd9e2.chunk.js","sourcesContent":["const MyMessage = ({ message }) => {\r\n  if (message.attachments && message.attachments.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"message-attachment\"\r\n        className=\"message-image\"\r\n        style={{ float: 'right' }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessage;","const TheirMessage = ( { lastMessage, message}) => {\r\nconst isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username; \r\n    return(\r\n        <div className=\"message-row\">\r\n           {isFirstMessageByUser && (\r\n               <div\r\n               className=\"message-avatar\"\r\n               style={{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n               />\r\n           )}\r\n            {message?.attactments?.length > 0 \r\n        ? (\r\n            <img\r\n            src ={message.attachments[0].file}\r\n            alt = \"message-attachment\"\r\n            className = \"message-image\"\r\n            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px'}}\r\n            />\r\n        \r\n    ) : (\r\n        <div className='message' style={{float:'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px'}}>\r\n          {message.text}\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n\r\n</div>\r\n    )\r\n    \r\n}\r\n\r\n    \r\n\r\n\r\nexport default TheirMessage;","import MyMessage from \"./MyMessage\"\r\nimport { useState } from \"react\"\r\nimport { sendMessage, isTyping } from \"react-chat-engine\"\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\"\r\n\r\nconst MessageFrom = (props) => {\r\n    const [value, setValue] = useState('')\r\n    const { chatId, creds } = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n        if(text.length > 0 ) sendMessage(creds, chatId, { text });\r\n        setValue('');\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload =(event) => {\r\n        sendMessage(creds, chatId, {files: event.target.files, text: ''})\r\n    }\r\n\r\n    return(\r\n        <form className='message-form' onSubmit={handleSubmit}>\r\n            <input className='message-input'\r\n            placeholder=\"Send a message ...\"\r\n            value = {value}\r\n            onChange = {handleChange} \r\n            onSubmit = {handleSubmit}\r\n            />\r\n           <label htmlFor=\"upload-button\">\r\n               <span className='image-button'>\r\n                   <PictureOutlined className='picture-icon'/>\r\n               </span>\r\n           </label>\r\n           <input \r\n            type = \"file\"\r\n            multiple = 'false'\r\n            id = 'upload-button'\r\n            style = {{display : \"none\" }}\r\n            onChange = {handleUpload}\r\n           />\r\n\r\n           <button type='button' className='send-button'>\r\n               <SendOutlined className='send-icon' />\r\n           </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageFrom;","import MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n    <div\r\n      key={`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float: isMyMessage ? 'right' : 'left',\r\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage\r\n              ? <MyMessage message={message} />\r\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n          </div>\r\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst projectID = '2cafad9b-eb65-4198-9207-f7b42bc49ab7';\r\n\r\nconst Modal = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n      window.location.reload();\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Oops, incorrect credentials.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start chatting</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <h1>{error}</h1>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Modal;","import { ChatEngine } from 'react-chat-engine';\r\nimport './App.css'\r\nimport ChatFeed from './components/ChatFeed'\r\nimport LoginForm from './components/LoginForm'\r\nconst App = () => {\r\n    if(!localStorage.getItem('username')) return <LoginForm />\r\n    return(\r\n        <ChatEngine\r\n        height=\"100vh\"\r\n        projectID=\"\r\n        2cafad9b-eb65-4198-9207-f7b42bc49ab7\"\r\n        userName={localStorage.getItem('username')}\r\n        userSecret={localStorage.getItem('password')}\r\n        renderChatFeed = {(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}